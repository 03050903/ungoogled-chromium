From 8b1106f9fbe64b8af9afc19216f1bd2890683566 Mon Sep 17 00:00:00 2001
From: Joachim Bauch <jojo@struktur.de>
Date: Tue, 7 Jul 2015 17:02:09 +0200
Subject: [PATCH 41/60] safe_browsing: disable incident reporting

Disables the safebrowsing incident reporting where you could upload
information about a blocked URL to Google (also added a trk prefix to
the URL so we get notified if this happens again in the future).
---
 .../safe_browsing/incident_reporting/incident_report_uploader_impl.cc | 2 +-
 .../safe_browsing/incident_reporting/incident_reporting_service.cc    | 3 +++
 chrome/browser/safe_browsing/safe_browsing_blocking_page.cc           | 4 ++--
 chrome/browser/safe_browsing/safe_browsing_service.cc                 | 2 ++
 components/security_interstitials/core/safe_browsing_error_ui.cc      | 2 ++
 5 files changed, 10 insertions(+), 3 deletions(-)

--- a/chrome/browser/safe_browsing/incident_reporting/incident_report_uploader_impl.cc
+++ b/chrome/browser/safe_browsing/incident_reporting/incident_report_uploader_impl.cc
@@ -21,7 +21,7 @@ namespace safe_browsing {
 namespace {
 
 const char kSbIncidentReportUrl[] =
-    "https://sb-ssl.google.com/safebrowsing/clientreport/incident";
+    "trk:268:https://sb-ssl.google.com/safebrowsing/clientreport/incident";
 
 constexpr net::NetworkTrafficAnnotationTag kTrafficAnnotation =
     net::DefineNetworkTrafficAnnotation("safe_browsing_incident", R"(
--- a/chrome/browser/safe_browsing/incident_reporting/incident_reporting_service.cc
+++ b/chrome/browser/safe_browsing/incident_reporting/incident_reporting_service.cc
@@ -299,11 +299,14 @@ IncidentReportingService::UploadContext:
 
 // static
 bool IncidentReportingService::IsEnabledForProfile(Profile* profile) {
+  return false;
+#if 0
   if (profile->IsOffTheRecord())
     return false;
   if (!profile->GetPrefs()->GetBoolean(prefs::kSafeBrowsingEnabled))
     return false;
   return IsExtendedReportingEnabled(*profile->GetPrefs());
+#endif
 }
 
 IncidentReportingService::IncidentReportingService(
--- a/chrome/browser/safe_browsing/safe_browsing_blocking_page.cc
+++ b/chrome/browser/safe_browsing/safe_browsing_blocking_page.cc
@@ -62,8 +62,8 @@ class SafeBrowsingBlockingPageFactoryImp
     PrefService* prefs =
         Profile::FromBrowserContext(web_contents->GetBrowserContext())
             ->GetPrefs();
-    bool is_extended_reporting_opt_in_allowed =
-        prefs->GetBoolean(prefs::kSafeBrowsingExtendedReportingOptInAllowed);
+    bool is_extended_reporting_opt_in_allowed = false;
+//        prefs->GetBoolean(prefs::kSafeBrowsingExtendedReportingOptInAllowed);
     bool is_proceed_anyway_disabled =
         prefs->GetBoolean(prefs::kSafeBrowsingProceedAnywayDisabled);
 
--- a/chrome/browser/safe_browsing/safe_browsing_service.cc
+++ b/chrome/browser/safe_browsing/safe_browsing_service.cc
@@ -348,11 +348,13 @@ SafeBrowsingDatabaseManager* SafeBrowsin
 
 void SafeBrowsingService::RegisterAllDelayedAnalysis() {
 #if defined(FULL_SAFE_BROWSING)
+#if 0
   RegisterBinaryIntegrityAnalysis();
   RegisterBlacklistLoadAnalysis();
   RegisterModuleLoadAnalysis(database_manager());
   RegisterVariationsSeedSignatureAnalysis();
 #endif
+#endif
 }
 
 SafeBrowsingProtocolConfig SafeBrowsingService::GetProtocolConfig() const {
--- a/components/security_interstitials/core/safe_browsing_loud_error_ui.cc
+++ b/components/security_interstitials/core/safe_browsing_loud_error_ui.cc
@@ -27,11 +27,11 @@ const char kLearnMore[] = "https://suppo
 // diagnostic page.
 #if defined(GOOGLE_CHROME_BUILD)
 const char kSbDiagnosticUrl[] =
-    "https://www.google.com/safebrowsing/"
+    "trk:227:https://www.google.com/safebrowsing/"
     "diagnostic?site=%s&client=googlechrome";
 #else
 const char kSbDiagnosticUrl[] =
-    "https://www.google.com/safebrowsing/diagnostic?site=%s&client=chromium";
+    "trk:228:https://www.google.com/safebrowsing/diagnostic?site=%s&client=chromium";
 #endif
 
 // Constants for the V4 phishing string upgrades.
